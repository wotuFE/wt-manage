;(function(window) {

  var svgSprite = '<svg>' +
    '' +
    '<symbol id="icon-tongxunlu" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M128 92.032l0 112C128 219.52 140.992 232 156.992 232l57.92 0L214.912 64 156.928 64C140.928 64 128 76.544 128 92.032L128 92.032zM128 334.656l0 112C128 462.08 140.992 474.624 156.992 474.624l57.92 0L214.912 306.688 156.928 306.688C140.928 306.688 128 319.232 128 334.656L128 334.656zM128 577.344l0 111.936c0 15.488 12.992 28.032 28.992 28.032l57.92 0L214.912 549.312 156.928 549.312C140.928 549.312 128 561.856 128 577.344L128 577.344zM128 820.032l0 112C128 947.456 140.992 960 156.992 960l57.92 0 0-168L156.928 792C140.928 792 128 804.544 128 820.032L128 820.032zM867.072 64 243.968 64l0 896 623.104 0C883.008 960 896 947.456 896 932.032L896 92.032C896 76.544 883.008 64 867.072 64L867.072 64zM570.048 285.76c59.968 0 108.544 47.04 108.544 105.024 0 57.984-48.64 105.024-108.544 105.024-60.096 0-108.736-46.976-108.736-105.024C461.312 332.8 509.952 285.76 570.048 285.76L570.048 285.76zM338.112 738.176c0-128.64 103.808-218.88 231.936-218.88 128.064 0 231.808 90.304 231.808 218.88L338.112 738.176 338.112 738.176z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-huodong" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M515.682879 64.335261c-249.25897 0-451.323059 202.064089-451.323059 451.323059s202.064089 451.323059 451.323059 451.323059 451.323059-202.064089 451.323059-451.323059S764.941849 64.335261 515.682879 64.335261zM536.752754 173.313278c43.213197 0 78.245062 35.031864 78.245062 78.245062 0 43.213197-35.031864 78.245062-78.245062 78.245062-43.213197 0-78.245062-35.031864-78.245062-78.245062C458.507692 208.345142 493.538533 173.313278 536.752754 173.313278zM237.223866 223.614917l50.872644 30.399357 59.234079-1.850138-30.399357 50.872644 1.850138 59.234079-50.872644-30.399357-59.235103 1.850138 30.399357-50.872644L237.223866 223.614917zM344.491938 779.483031l-21.811772 27.418466-11.31879-33.158191-27.418466-21.811772 33.158191-11.31879 21.811772-27.418466 11.31879 33.158191 27.418466 21.811772L344.491938 779.483031zM508.527922 663.237493l-31.292704 45.317115c-4.294816 6.252401-11.365862 9.8176-18.698874 9.8176-2.337231 0-4.64581-0.350994-6.895037-1.051959l-186.905854-59.516512c-12.008498-3.827165-18.640546-16.654308-14.813381-28.633131 3.827165-11.920494 16.624632-18.611893 28.574802-14.783705l170.865529 54.403051 21.738094-31.40936c7.099698-10.401908 21.300119-12.9438 31.642674-5.78475C513.115404 638.72317 515.685949 652.893914 508.527922 663.237493zM672.643724 619.000989l-52.591799 221.499743c-2.512217 10.460236-11.833513 17.501606-22.147416 17.501606-1.752924 0-3.505847-0.174985-5.258771-0.613984-12.213159-2.892887-19.780509-15.164375-16.887622-27.406187l46.953382-197.687408-136.564305-22.11774c-6.282077-0.99363-11.833513-4.587482-15.33936-9.904581-3.505847-5.288446-4.616134-11.803837-3.097548-17.969257l40.524972-165.255765c-23.90034 1.489934-46.807049 2.278903-67.113537 2.278903-59.604516 0-100.509135-4.792143-104.862279-5.346775-12.476149-1.51961-21.358447-12.885472-19.838837-25.360598 1.51961-12.446473 12.592806-21.738094 25.360598-19.809161 2.65855 0.233314 273.448906 31.789007 452.291107-73.862241 10.635221-6.369058 24.717961-2.834558 31.175023 8.035 6.369058 10.810207 2.775206 24.77629-8.063653 31.175023-80.786954 47.742351-176.300308 69.39244-261.031085 78.712713l-38.362726 156.315138 136.388297 22.059412c6.194072 1.022283 11.745509 4.587482 15.281031 9.846252C672.966065 606.349855 674.105005 612.836593 672.643724 619.000989zM803.572682 485.497393l-12.595876 36.81958-24.206308-30.469965-36.820604-12.595876 30.469965-24.206308 12.595876-36.820604 24.206308 30.469965 36.81958 12.595876L803.572682 485.497393z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-geren" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M276.161116 349.346284c10.926955 90.608413 102.1488 184.495144 172.843014 184.495144 81.168801 0 171.683966-98.683987 183.80696-184.495144 4.536778-3.198171 12.036681-11.100349 14.776319-28.969261 0 0 17.44737-62.10385-5.553257-55.428536 7.995427-24.017106 37.280652-121.932761-30.196896-175.216596-78.379842-69.119789-205.246263-81.993389-205.246263-81.993389s12.141489-24.302244-27.791718 13.226555c0 0-75.565452 31.621816-100.264577 108.421068 0 0-27.847204 34.7645-8.559538 136.789227-27.426433-12.947582-8.677446 54.201672-8.677446 54.201672C264.019627 338.245935 271.55575 346.148114 276.161116 349.346284z"  ></path>' +
    '' +
    '<path d="M808.716641 641.996625c-22.41802-49.651792-158.687063-92.591279-158.687063-92.591279-72.596933-25.610026-73.154879-51.226217-73.154879-51.226217-32.64446 64.353359-63.497945 99.211107-91.661883 114.972309-12.768022 8.342216-60.225792 6.483424-60.225792 6.483424-69.783313-18.221866-99.583328-120.668135-99.583328-120.668135C315.512486 537.002609 168.477554 581.646759 168.477554 581.646759c-42.920992 16.548799-61.155188 41.321906-61.155188 41.321906-63.585027 94.171869-70.960856 303.961075-70.960856 303.961075 0.545616 32.434074 10.170953 45.189766 16.319147 50.036343L856.310815 976.966084c8.956419-9.1853 9.290878-15.371256 9.290878-15.371256C883.011301 811.238422 808.716641 641.996625 808.716641 641.996625z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-money" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M670.7 360.050c118.485 0 215.82-31.695 226.935-72.225 0.705-2.55 1.125-5.13 1.125-7.74v-139.89c0-45.945-102.105-83.19-228.045-83.19-125.94 0-228.060 37.245-228.060 83.19v139.905c0 2.61 0.435 5.19 1.125 7.74 11.085 40.515 108.42 72.21 226.92 72.21zM483.32 129.155c9.615-7.215 23.88-14.145 41.28-20.070 39.375-13.41 91.26-20.79 146.1-20.79s106.725 7.38 146.085 20.79c17.385 5.925 31.65 12.855 41.28 20.070 7.41 5.565 9.915 9.72 10.335 11.040-0.435 1.305-2.925 5.46-10.35 11.025-9.615 7.215-23.895 14.145-41.28 20.070-39.36 13.41-91.245 20.79-146.085 20.79s-106.725-7.38-146.1-20.79c-17.385-5.925-31.65-12.855-41.28-20.070-7.395-5.565-9.9-9.72-10.305-11.025 0.405-1.32 2.91-5.475 10.32-11.040zM670.7 518.27c118.485 0 215.82-31.695 226.935-72.225 0.69-2.55 1.11-5.13 1.11-7.74v-139.905c-0.015 32.28-50.475 54.99-124.095 68.79-31.2 5.835-66.48 9.21-103.965 9.21-37.485 0-72.765-3.36-103.965-9.21-73.62-13.8-124.095-36.51-124.095-68.79v54.9c-27.435-4.275-57.63-6.63-89.34-6.63-125.94 0-228.045 37.23-228.045 83.19v139.905c0 2.61 0.42 5.19 1.125 7.74 11.1 40.53 108.435 72.225 226.935 72.225 31.725 0 61.92-2.265 89.34-6.375 4.365-0.645 8.655-1.335 12.855-2.085 6.63-1.17 13.065-2.445 19.29-3.825 58.125-12.87 98.52-34.695 105.435-59.94 0.69-2.55 1.11-5.13 1.11-7.74v18.735c0 26.055-32.91 45.885-84.315 59.82-7.545 2.040-15.465 3.96-23.76 5.745-5.205 1.125-10.545 2.205-16.020 3.225-4.785 0.9-9.66 1.725-14.625 2.505-27.45 4.29-57.585 6.72-89.34 6.72-37.485 0-72.75-3.36-103.965-9.21-73.62-13.785-124.095-36.51-124.095-68.79v139.905c0 2.61 0.435 5.19 1.125 7.74 11.1 40.515 108.435 72.225 226.935 72.225 44.91 0 86.76-4.56 122.040-12.42 57.825-12.885 97.995-34.65 104.895-59.805 0.69-2.55 1.125-5.13 1.125-7.74v18.735c0 25.95-32.625 45.72-83.685 59.64-12.45 3.39-25.98 6.45-40.41 9.15-31.2 5.85-66.465 9.21-103.965 9.21-37.485 0-72.75-3.36-103.965-9.21-73.62-13.8-124.095-36.51-124.095-68.79v139.905c0 2.595 0.42 5.19 1.11 7.74 11.1 40.53 108.435 72.225 226.935 72.225 118.485 0 215.82-31.695 226.935-72.225 0.69-2.55 1.11-5.13 1.11-7.74v-58.74c27.435 4.11 57.63 6.375 89.34 6.375 118.5 0 215.82-31.695 226.935-72.225 0.705-2.55 1.125-5.13 1.125-7.74v-139.905c0 32.28-50.475 54.99-124.095 68.775-31.2 5.85-66.465 9.21-103.965 9.21-31.755 0-61.905-2.43-89.34-6.705v-16.005c27.435 4.11 57.63 6.375 89.34 6.375 118.5 0 215.82-31.695 226.935-72.225 0.69-2.55 1.11-5.13 1.11-7.74v-139.905c0 32.28-50.475 54.99-124.095 68.79-31.2 5.85-66.465 9.21-103.95 9.21-31.755 0-61.905-2.415-89.355-6.705v-15.99c27.51 4.080 57.705 6.36 89.415 6.36zM540.665 440.885c-9.615 7.2-23.88 14.145-41.28 20.070-11.31 3.855-23.67 7.2-36.825 10.035-4.8 1.035-9.705 1.995-14.715 2.88-1.725 0.315-3.465 0.615-5.22 0.9-27.63 4.575-57.99 6.99-89.34 6.99-54.84 0-106.71-7.38-146.085-20.79-17.385-5.925-31.65-12.855-41.28-20.070-7.41-5.565-9.915-9.72-10.335-11.025 0.42-1.32 2.925-5.475 10.335-11.040 9.615-7.2 23.895-14.145 41.28-20.070 39.375-13.41 91.245-20.79 146.085-20.79 31.35 0 61.725 2.415 89.34 6.99 20.715 3.42 39.885 8.055 56.745 13.815 17.385 5.925 31.65 12.855 41.28 20.070 7.41 5.565 9.915 9.72 10.335 11.025-0.405 1.29-2.91 5.445-10.32 11.010z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '</svg>'
  var script = function() {
    var scripts = document.getElementsByTagName('script')
    return scripts[scripts.length - 1]
  }()
  var shouldInjectCss = script.getAttribute("data-injectcss")

  /**
   * document ready
   */
  var ready = function(fn) {
    if (document.addEventListener) {
      if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) {
        setTimeout(fn, 0)
      } else {
        var loadFn = function() {
          document.removeEventListener("DOMContentLoaded", loadFn, false)
          fn()
        }
        document.addEventListener("DOMContentLoaded", loadFn, false)
      }
    } else if (document.attachEvent) {
      IEContentLoaded(window, fn)
    }

    function IEContentLoaded(w, fn) {
      var d = w.document,
        done = false,
        // only fire once
        init = function() {
          if (!done) {
            done = true
            fn()
          }
        }
        // polling for no errors
      var polling = function() {
        try {
          // throws errors until after ondocumentready
          d.documentElement.doScroll('left')
        } catch (e) {
          setTimeout(polling, 50)
          return
        }
        // no errors, fire

        init()
      };

      polling()
        // trying to always fire before onload
      d.onreadystatechange = function() {
        if (d.readyState == 'complete') {
          d.onreadystatechange = null
          init()
        }
      }
    }
  }

  /**
   * Insert el before target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var before = function(el, target) {
    target.parentNode.insertBefore(el, target)
  }

  /**
   * Prepend el to target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var prepend = function(el, target) {
    if (target.firstChild) {
      before(el, target.firstChild)
    } else {
      target.appendChild(el)
    }
  }

  function appendSvg() {
    var div, svg

    div = document.createElement('div')
    div.innerHTML = svgSprite
    svgSprite = null
    svg = div.getElementsByTagName('svg')[0]
    if (svg) {
      svg.setAttribute('aria-hidden', 'true')
      svg.style.position = 'absolute'
      svg.style.width = 0
      svg.style.height = 0
      svg.style.overflow = 'hidden'
      prepend(svg, document.body)
    }
  }

  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {
    window.__iconfont__svg__cssinject__ = true
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (e) {
      console && console.log(e)
    }
  }

  ready(appendSvg)


})(window)